datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  PENDING
  COACH
  ADMIN
}

model User {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  email       String       @unique
  password    String
  firstname   String?
  lastname    String?
  role        Role         @default(PENDING)
  coachOn     Project[]    @relation("Coach")
  leadCoachOn Project[]    @relation("LeadCoach")
  suggestions Suggestion[]
  drafts      Draft[]
}

enum Status {
  UNDECIDED
  YES
  MAYBE
  NO
}

model Suggestion {
  id          Int       @id @default(autoincrement())
  applicant   Applicant @relation(fields: [applicantId], references: [id])
  applicantId String
  suggester   User      @relation(fields: [suggesterId], references: [id])
  suggesterId String
  rationale   String
  status      Status
}

model Applicant {
  id          String       @id @default(uuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  response    Json
  status      Status       @default(UNDECIDED)
  suggestions Suggestion[]
}

model ProjectProfile {
  id        Int     @id @default(autoincrement())
  name      String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
  draft     Draft?
}

model Draft {
  id        Int             @id @default(autoincrement())
  rationale String
  Project   Project         @relation(fields: [projectId], references: [id])
  projectId String
  drafter   User            @relation(fields: [drafterId], references: [id])
  drafterId String
  profile   ProjectProfile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

model Project {
  id               String           @id @default(cuid())
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  name             String
  client           String?
  coaching         User[]           @relation("Coach", fields: [id], references: [id])
  leadCoaching     User[]           @relation("LeadCoach", fields: [id], references: [id])
  requiredProfiles ProjectProfile[]
  drafts           Draft[]
}
